


ARM Macro Assembler    Page 1 


    1 00000000         ;asagidaki kod java'dan assembly'ye cevirildi.
    2 00000000         ;Bir dizi siralamak orneigidir.
    3 00000000         ;public static void countingSort(int[] input, int k) {
    4 00000000         ;// create buckets 
    5 00000000         ;int counter[] = new int[k + 1];
    6 00000000         
    7 00000000         ;// fill buckets
    8 00000000         ;for (int d = 0; d < input.length; d++) {
    9 00000000         ;int r = input[d];
   10 00000000         ;counter[r] = counter[r] + 1;
   11 00000000         ;}
   12 00000000         ;// sort array 
   13 00000000         ;int ndx = 0;
   14 00000000         ;for (int i = 0; i < counter.length; i++) {
   15 00000000         ;for (; 0 < counter[i];) {
   16 00000000         ;input[ndx] = i;
   17 00000000         ;ndx = ndx + 1;
   18 00000000         ;counter[i] = counter[i] - 1;
   19 00000000         ;}
   20 00000000         ;}
   21 00000000         ;}
   22 00000000                 AREA             ornek, CODE, READONLY
   23 00000000                 ENTRY
   24 00000000 E59F50CC        LDR              r5, =counterDizisi ; dizinin ad
                                                            dresi (dizinin basl
                                                            angici) 
   25 00000004 E59F60CC        LDR              r6, =inputDizisi ; dizinin addr
                                                            esi (dizinin baslan
                                                            gici)
   26 00000008         
   27 00000008         ;---- birinci loop degiskenleri-----
   28 00000008 E3A07007        LDR              r7, = 7     ; inputDizisi boyut
                                                            u (yani inputDizisi
                                                            'ndeki en buyuk ele
                                                            mani kacsa, odur)
   29 0000000C E3A08000        LDR              r8, = 0     ; inputDizisine gez
                                                            mek icin (d=0) (dor
                                                            der atlayacak)
   30 00000010 E3A09000        LDR              r9, = 0     ; birinci loop un l
                                                            imiti kontrol etmek
                                                             icin, birnci loop 
                                                            un offset degeri (d
                                                            ++)
   31 00000014         ; ------- birinci loop baslangici--------
   32 00000014         birinciLoopDon
   33 00000014 E1590007        CMP              r9, r7
   34 00000018 CA00000A        BGT              birinciLoopSon
   35 0000001C         ; ------- birinci loop baslangici--------
   36 0000001C E7960008        LDR              r0, [r6, r8] ; birinci loop, co
                                                            unterDizisinin ust 
                                                            sinirina gelmediyse
                                                             (yani r0 = input[d
                                                            ]) yap
   37 00000020 E3A03004        LDR              r3, =4      ; bu dort counterDi
                                                            zisindeki atlamalar
                                                             icin, MUL komutund
                                                            a kullanilacak 
   38 00000024 E0020390        MUL              r2, r0, r3
   39 00000028 E7951002        LDR              r1, [r5, r2] ; r1 temp register



ARM Macro Assembler    Page 2 


                                                             olarak counterDizi
                                                            sinin r'deki degeri
                                                             tutuyor (yani r1 =
                                                             counter[r] ) 
   40 0000002C E2811001        ADD              r1, r1, #1  ; temp deki degeri 
                                                            bir kadar artiyoruz
                                                             (yani r1 = counter
                                                            [r] + 1)
   41 00000030 E3A03004        LDR              r3, =4      ; bu dort counterDi
                                                            zisindeki atlamalar
                                                             icin, MUL komutund
                                                            a kullanilacak 
   42 00000034 E0020390        MUL              r2, r0, r3
   43 00000038 E7851002        STR              r1 , [r5, r2] ; degeri artigimi
                                                            zda geri diziye yaz
                                                            iyoruz (yani counte
                                                            r[r] = r1)
   44 0000003C E2888004        ADD              r8, r8, #4
   45 00000040 E2899001        ADD              r9, #1
   46 00000044 EAFFFFF2        B                birinciLoopDon
   47 00000048         birinciLoopSon
   48 00000048         ;-------- birinci loop sonu--------
   49 00000048         
   50 00000048 E3A02000        LDR              r2, =0      ; ndx degiskeni ici
                                                            n
   51 0000004C         
   52 0000004C         ;---- ikinci, dis loop degiskenleri------
   53 0000004C E3A0A006        LDR              r10, =6     ; counterDizisinin 
                                                            boyutu yani hem dis
                                                             hem de ic looplari
                                                            n ust siniri
   54 00000050 E3A0B000        LDR              r11, =0     ; counterDizisine g
                                                            ezmek icin (i=0) (d
                                                            order atlayacak)
   55 00000054 E3A0C000        LDR              r12, =0     ;  ikinci, distaki 
                                                            loop un limiti kont
                                                            rol etmek icin, dis
                                                            taki loop un offset
                                                             degeri (i++)
   56 00000058         ; ------- distaki loop baslangici--------
   57 00000058         disLoopDon
   58 00000058 E15C000A        CMP              r12, r10    ; distaki loop, diz
                                                            inin sinirina geldi
                                                             mi
   59 0000005C CA00000C        BGT              disLoopSon  ; distaki loop, diz
                                                            inin sinirina geldi
                                                            yse loop u bitir
   60 00000060 E795300B        LDR              r3, [r5, r11] ; distaki loop, c
                                                            ounterDizisinin ust
                                                             sinirina gelmediys
                                                            e (r3 = counter[i])
                                                             yap
   61 00000064         
   62 00000064         ; ------- icteki loop baslangici--------
   63 00000064         icLoopDon
   64 00000064 E3530000        CMP              r3, #0      ; icteki loop, sifi
                                                            r olana kadar don
   65 00000068 DA000006        BLE              icLoopSon   ; icteki loop, dizi
                                                            nin sinirina geldiy



ARM Macro Assembler    Page 3 


                                                            se bitir programi y
                                                            ani for (; 0 < coun
                                                            ter[i];) {
   66 0000006C E785C002        STR              r12, [r5, r2] ; input[ndx] = i
   67 00000070 E2822001        ADD              r2, r2, #1  ; ndx = ndx + 1
   68 00000074 E2433001        SUB              r3, r3, #1  ; r3 = counter[i] -
                                                             1
   69 00000078 E3A01004        LDR              r1, =4      ; bu dort counterDi
                                                            zisindeki atlamalar
                                                             icin, MUL komutund
                                                            a kullanilacak 
   70 0000007C E008019C        MUL              r8, r12, r1
   71 00000080 E7853008        STR              r3, [r5, r8]
   72 00000084 EAFFFFF6        B                icLoopDon
   73 00000088         icLoopSon
   74 00000088         ;-------- icteki loop sonu--------
   75 00000088         
   76 00000088 E28BB004        ADD              r11, r11, #4 ; distaki loop, di
                                                            zinin ust sinirina 
                                                            gelmediyse, offset 
                                                            i dort byte kadar a
                                                            rtir
   77 0000008C E28CC001        ADD              r12, #1     ; distaki loop, diz
                                                            inin ust sinirina g
                                                            elmediyse, alt sini
                                                            ri bir artir
   78 00000090 EAFFFFF0        B                disLoopDon
   79 00000094         disLoopSon
   80 00000094         ;-------- ikinci, distaki loop sonu--------
   81 00000094         
   82 00000094 00000003 
              00000004 
              00000006 
              00000002 
              00000001 
              00000001 
              00000003 
              00000005 inputDizisi
                               DCD              3, 4, 6, 2, 1, 1, 3, 5
   83 000000B4 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 counterDizisi
                               DCD              0, 0, 0, 0, 0, 0, 0 ,0
   84 000000D4                 END
              00000000 
              00000000 
Command Line: --debug --xref --bi --apcs=interwork --depend=.\odev1son.d -o.\od
ev1son.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EVAL
 SETA 1" --list=.\odev1son.lst odev1son.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

birinciLoopDon 00000014

Symbol: birinciLoopDon
   Definitions
      At line 32 in file odev1son.s
   Uses
      At line 46 in file odev1son.s
Comment: birinciLoopDon used once
birinciLoopSon 00000048

Symbol: birinciLoopSon
   Definitions
      At line 47 in file odev1son.s
   Uses
      At line 34 in file odev1son.s
Comment: birinciLoopSon used once
counterDizisi 000000B4

Symbol: counterDizisi
   Definitions
      At line 83 in file odev1son.s
   Uses
      At line 24 in file odev1son.s
Comment: counterDizisi used once
disLoopDon 00000058

Symbol: disLoopDon
   Definitions
      At line 57 in file odev1son.s
   Uses
      At line 78 in file odev1son.s
Comment: disLoopDon used once
disLoopSon 00000094

Symbol: disLoopSon
   Definitions
      At line 79 in file odev1son.s
   Uses
      At line 59 in file odev1son.s
Comment: disLoopSon used once
icLoopDon 00000064

Symbol: icLoopDon
   Definitions
      At line 63 in file odev1son.s
   Uses
      At line 72 in file odev1son.s
Comment: icLoopDon used once
icLoopSon 00000088

Symbol: icLoopSon
   Definitions
      At line 73 in file odev1son.s
   Uses
      At line 65 in file odev1son.s
Comment: icLoopSon used once
inputDizisi 00000094

Symbol: inputDizisi



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 82 in file odev1son.s
   Uses
      At line 25 in file odev1son.s
Comment: inputDizisi used once
ornek 00000000

Symbol: ornek
   Definitions
      At line 22 in file odev1son.s
   Uses
      None
Comment: ornek unused
9 symbols
342 symbols in table
